{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d42dffc7.chunk.js","sourcesContent":["\nimport PropTypes from 'prop-types'\n\n\n\nconst Button = ({color, text, onClick}) => {\n    \n    return (    \n    <button onClick={onClick} style={{backgroundColor: color}}\n    className='btn'>\n        {text}\n        </button>\n       \n    )\n}\n\nButton.defaultProps= {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\n\nconst Header = ({title, onAdd, showAdd}) => {\n\n    return (\n        <header className='header'>\n            <h1> {title} </h1>\n            <Button color={showAdd ? 'red' : 'green'} \n            text={showAdd ? 'Close' : 'Add'} \n            onClick={onAdd}/>\n       \n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ? \n        'reminder' : '' }`} onDoubleClick={() => \n        onToggle(task.id)}>\n            <h3>\n                {task.text} {' '}\n                <FaTimes \n                style={{color:'red', cursor:\n                'pointer' }} \n                onClick={() => onDelete(task.id)}\n                />\n                </h3>\n            <p>{task.day}</p>\n            \n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n  \n\n    return (\n        <>\n        {tasks.map((task) => (\n        <Task key={task.id} task={task}\n        onDelete={onDelete}\n        onToggle={onToggle}/>\n        ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState('')\n\nconst onSubmit = (e) => {\n    e.preventDefault()\n\n    if(!text) {\n        alert('Please add a task')\n        return\n    }\n    onAdd({text, day, reminder})\n\n    setText('')\n    setDay('')\n    setReminder(false)\n\n}\n\n    return (\n        <form className='add-form' onSubmit = {onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' \n                placeholder='Add Task'\n                value={text} \n                onChange={(e) => setText(e.target.value)} \n                />\n            </div>\n            <div className='form-control '>\n                <label>Day & Time</label>\n                <input\n                 type='text' \n                 placeholder='Add Day & Time' \n                 value={day}\n                 onChange={(e) => setDay(e.target.value)}\n                 />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set reminder</label>\n                <input type='checkbox'\n                checked={reminder}\n                value={reminder}\n                onChange={(e) => setReminder(e.currentTarget.checked)}\n                  />\n            </div>\n            \n            <input type ='submit' value='Save Task'\n            className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n","\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport {useState} from 'react'\nimport AddTask from './components/AddTask'\n\n\nconst App = () => {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {id: 1,\n    text: 'Food',\n    day: 'Imorgon',\n    reminder: true, \n    },\n    { \n    id:2,\n    text : 'tja',\n    day: 'NOW',\n    reminder: false,\n    }\n\n  ])\n\n// Add task\n\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 1000) +1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n\n\n}\n\n// Delete task\nconst deleteTask = (id) => {\n\n  setTasks(tasks.filter((task) => task.id!==id))\n}\n\n//Toggle reminder\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id \n  ? { ...task, reminder: !task.reminder} : task))\n}\n\n\n\n  return (\n    \n    <div className='container'>\n      \n      <Header onAdd={() => setShowAddTask\n        (!showAddTask)} showAdd={showAddTask}\n        />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n          {tasks.length > 0 ? (\n      <Tasks tasks={tasks}  \n      onDelete={deleteTask}\n      onToggle={toggleReminder}/> \n      ) : ( 'No Tasks to show' \n      )}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}