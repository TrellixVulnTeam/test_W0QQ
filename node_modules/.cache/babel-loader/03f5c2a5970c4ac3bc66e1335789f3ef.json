{"ast":null,"code":"var _jsxFileName = \"/Users/idalinnakallio/Documents/GitHub/Nokia3310-DAT257/src/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks');\n      const data = await res.json();\n    };\n\n    fetchTasks();\n  }, []); // Add task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // Delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this) : 'No Tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/idalinnakallio/Documents/GitHub/Nokia3310-DAT257/src/frontend/src/App.js"],"names":["Header","Tasks","useState","useEffect","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","fetchTasks","res","fetch","data","json","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","reminder","length"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACD,KAHD;;AAIAJ,IAAAA,UAAU;AAEX,GAPQ,EAON,EAPM,CAAT,CANgB,CAgBlB;;AAEA,QAAMK,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,IAAkC,CAA7C;AACA,UAAMC,OAAO,GAAG;AAAEJ,MAAAA,EAAF;AAAM,SAAGD;AAAT,KAAhB;AACAP,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,OAAX,CAAD,CAAR;AAGD,GAND,CAlBkB,CA0BlB;;;AACA,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AAEzBR,IAAAA,QAAQ,CAACD,KAAK,CAACe,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAUA,EAAjC,CAAD,CAAR;AACD,GAHD,CA3BkB,CAgClB;;;AAEA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BR,IAAAA,QAAQ,CAACD,KAAK,CAACiB,GAAN,CAAWT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAC3B,EAAE,GAAGD,IAAL;AAAWU,MAAAA,QAAQ,EAAE,CAACV,IAAI,CAACU;AAA3B,KAD2B,GACYV,IADhC,CAAD,CAAR;AAED,GAHD;;AAOE,sBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMT,cAAc,CAChC,CAACD,WAD+B,CAAnC;AACkB,MAAA,OAAO,EAAEA;AAD3B;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,YALlB,EAMOP,KAAK,CAACmB,MAAN,GAAe,CAAf,gBACL,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEnB,KAAd;AACA,MAAA,QAAQ,EAAEc,UADV;AAEA,MAAA,QAAQ,EAAEE;AAFV;AAAA;AAAA;AAAA;AAAA,YADK,GAIC,kBAVR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAgBD,CAzDD;;GAAMnB,G;;KAAAA,G;AA2DN,eAAeA,GAAf","sourcesContent":["\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport {useState, useEffect} from 'react'\nimport AddTask from './components/AddTask'\n\n\nconst App = () => {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks')\n      const data = await res.json()\n    }\n    fetchTasks()\n\n  }, []\n  )\n\n// Add task\n\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 1000) +1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n\n\n}\n\n// Delete task\nconst deleteTask = (id) => {\n\n  setTasks(tasks.filter((task) => task.id!==id))\n}\n\n//Toggle reminder\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id \n  ? { ...task, reminder: !task.reminder} : task))\n}\n\n\n\n  return (\n    \n    <div className='container'>\n      \n      <Header onAdd={() => setShowAddTask\n        (!showAddTask)} showAdd={showAddTask}\n        />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n          {tasks.length > 0 ? (\n      <Tasks tasks={tasks}  \n      onDelete={deleteTask}\n      onToggle={toggleReminder}/> \n      ) : ( 'No Tasks to show' \n      )}\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}