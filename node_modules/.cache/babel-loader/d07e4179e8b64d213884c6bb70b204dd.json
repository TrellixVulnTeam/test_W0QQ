{"ast":null,"code":"import _toConsumableArray from\"/Users/idalinnakallio/Documents/GitHub/Nokia3310-DAT257/src/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/idalinnakallio/Documents/GitHub/Nokia3310-DAT257/src/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/idalinnakallio/Documents/GitHub/Nokia3310-DAT257/src/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Header from'./components/Header';import Tasks from'./components/Tasks';import{useState}from'react';import AddTask from'./components/AddTask';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAddTask=_useState2[0],setShowAddTask=_useState2[1];var _useState3=useState([{id:1,text:'Food',day:'Imorgon',reminder:true},{id:2,text:'tja',day:'NOW',reminder:false}]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];// Add task\nvar addTask=function addTask(task){var id=Math.floor(Math.random()*1000)+1;var newTask=_objectSpread({id:id},task);setTasks([].concat(_toConsumableArray(tasks),[newTask]));};// Delete task\nvar deleteTask=function deleteTask(id){setTasks(tasks.filter(function(task){return task.id!==id;}));};//Toggle reminder\nvar toggleReminder=function toggleReminder(id){setTasks(tasks.map(function(task){return task.id===id?_objectSpread(_objectSpread({},task),{},{reminder:!task.reminder}):task;}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onAdd:function onAdd(){return setShowAddTask(!showAddTask);},showAdd:showAddTask}),showAddTask&&/*#__PURE__*/_jsx(AddTask,{onAdd:addTask}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onToggle:toggleReminder}):'No Tasks to show']});};export default App;","map":{"version":3,"sources":["/Users/idalinnakallio/Documents/GitHub/Nokia3310-DAT257/src/frontend/src/App.js"],"names":["Header","Tasks","useState","AddTask","App","showAddTask","setShowAddTask","id","text","day","reminder","tasks","setTasks","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","length"],"mappings":"4cACA,MAAOA,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,OAAQC,QAAR,KAAuB,OAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,C,wFAGA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eAEsBF,QAAQ,CAAC,KAAD,CAF9B,wCAETG,WAFS,eAEIC,cAFJ,8BAIUJ,QAAQ,CAAC,CACjC,CAACK,EAAE,CAAE,CAAL,CACAC,IAAI,CAAE,MADN,CAEAC,GAAG,CAAE,SAFL,CAGAC,QAAQ,CAAE,IAHV,CADiC,CAMjC,CACAH,EAAE,CAAC,CADH,CAEAC,IAAI,CAAG,KAFP,CAGAC,GAAG,CAAE,KAHL,CAIAC,QAAQ,CAAE,KAJV,CANiC,CAAD,CAJlB,yCAITC,KAJS,eAIFC,QAJE,eAmBlB;AAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CACxB,GAAMP,CAAAA,EAAE,CAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,IAA3B,EAAkC,CAA7C,CACA,GAAMC,CAAAA,OAAO,gBAAKX,EAAE,CAAFA,EAAL,EAAYO,IAAZ,CAAb,CACAF,QAAQ,8BAAKD,KAAL,GAAYO,OAAZ,GAAR,CAGD,CAND,CAQA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACZ,EAAD,CAAQ,CAEzBK,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAa,SAACN,IAAD,QAAUA,CAAAA,IAAI,CAACP,EAAL,GAAUA,EAApB,EAAb,CAAD,CAAR,CACD,CAHD,CAKA;AAEA,GAAMc,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACd,EAAD,CAAQ,CAC7BK,QAAQ,CAACD,KAAK,CAACW,GAAN,CAAU,SAACR,IAAD,QAAUA,CAAAA,IAAI,CAACP,EAAL,GAAYA,EAAZ,gCACtBO,IADsB,MAChBJ,QAAQ,CAAE,CAACI,IAAI,CAACJ,QADA,GACYI,IADtB,EAAV,CAAD,CAAR,CAED,CAHD,CAOE,mBAEE,aAAK,SAAS,CAAC,WAAf,wBAEE,KAAC,MAAD,EAAQ,KAAK,CAAE,uBAAMR,CAAAA,cAAc,CAChC,CAACD,WAD+B,CAApB,EAAf,CACkB,OAAO,CAAEA,WAD3B,EAFF,CAKGA,WAAW,eAAI,KAAC,OAAD,EAAS,KAAK,CAAEQ,OAAhB,EALlB,CAMOF,KAAK,CAACY,MAAN,CAAe,CAAf,cACL,KAAC,KAAD,EAAO,KAAK,CAAEZ,KAAd,CACA,QAAQ,CAAEQ,UADV,CAEA,QAAQ,CAAEE,cAFV,EADK,CAIC,kBAVR,GAFF,CAgBD,CA5DD,CA8DA,cAAejB,CAAAA,GAAf","sourcesContent":["\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport {useState} from 'react'\nimport AddTask from './components/AddTask'\n\n\nconst App = () => {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {id: 1,\n    text: 'Food',\n    day: 'Imorgon',\n    reminder: true, \n    },\n    { \n    id:2,\n    text : 'tja',\n    day: 'NOW',\n    reminder: false,\n    }\n\n  ])\n\n// Add task\n\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 1000) +1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n\n\n}\n\n// Delete task\nconst deleteTask = (id) => {\n\n  setTasks(tasks.filter((task) => task.id!==id))\n}\n\n//Toggle reminder\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id \n  ? { ...task, reminder: !task.reminder} : task))\n}\n\n\n\n  return (\n    \n    <div className='container'>\n      \n      <Header onAdd={() => setShowAddTask\n        (!showAddTask)} showAdd={showAddTask}\n        />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n          {tasks.length > 0 ? (\n      <Tasks tasks={tasks}  \n      onDelete={deleteTask}\n      onToggle={toggleReminder}/> \n      ) : ( 'No Tasks to show' \n      )}\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}