{"ast":null,"code":"var _jsxFileName = \"/Users/idalinnakallio/Documents/GitHub/Nokia3310-DAT257/src/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Food',\n    day: 'Imorgon',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'tja',\n    day: 'NOW',\n    reminder: false\n  }]); // Add task\n\n  const addTask = task => {\n    console.log(task);\n  }; // Delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this) : 'No Tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"MevO+no2FO2LwmjHvgPV3uPpk9M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/idalinnakallio/Documents/GitHub/Nokia3310-DAT257/src/frontend/src/App.js"],"names":["Header","Tasks","useState","AddTask","App","tasks","setTasks","id","text","day","reminder","addTask","task","console","log","deleteTask","filter","toggleReminder","map","length"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAGhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CACjC;AAACK,IAAAA,EAAE,EAAE,CAAL;AACAC,IAAAA,IAAI,EAAE,MADN;AAEAC,IAAAA,GAAG,EAAE,SAFL;AAGAC,IAAAA,QAAQ,EAAE;AAHV,GADiC,EAMjC;AACAH,IAAAA,EAAE,EAAC,CADH;AAEAC,IAAAA,IAAI,EAAG,KAFP;AAGAC,IAAAA,GAAG,EAAE,KAHL;AAIAC,IAAAA,QAAQ,EAAE;AAJV,GANiC,CAAD,CAAlC,CAHgB,CAkBlB;;AAEA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD,CApBkB,CAwBlB;;;AACA,QAAMG,UAAU,GAAIR,EAAD,IAAQ;AAEzBD,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAUA,EAAjC,CAAD,CAAR;AACD,GAHD,CAzBkB,CA8BlB;;;AAEA,QAAMU,cAAc,GAAIV,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CAACD,KAAK,CAACa,GAAN,CAAWN,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAC3B,EAAE,GAAGK,IAAL;AAAWF,MAAAA,QAAQ,EAAE,CAACE,IAAI,CAACF;AAA3B,KAD2B,GACYE,IADhC,CAAD,CAAR;AAED,GAHD;;AAOE,sBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGP,KAAK,CAACc,MAAN,GAAe,CAAf,gBACD,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEd,KAAd;AACA,MAAA,QAAQ,EAAEU,UADV;AAEA,MAAA,QAAQ,EAAEE;AAFV;AAAA;AAAA;AAAA;AAAA,YADC,GAIK,kBARR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAcD,CArDD;;GAAMb,G;;KAAAA,G;AAuDN,eAAeA,GAAf","sourcesContent":["\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport {useState} from 'react'\nimport AddTask from './components/AddTask'\n\n\nconst App = () => {\n\n\n  const [tasks, setTasks] = useState([\n    {id: 1,\n    text: 'Food',\n    day: 'Imorgon',\n    reminder: true, \n    },\n    { \n    id:2,\n    text : 'tja',\n    day: 'NOW',\n    reminder: false,\n    }\n\n  ])\n\n// Add task\n\nconst addTask = (task) => {\n  console.log(task);\n}\n\n// Delete task\nconst deleteTask = (id) => {\n\n  setTasks(tasks.filter((task) => task.id!==id))\n}\n\n//Toggle reminder\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id \n  ? { ...task, reminder: !task.reminder} : task))\n}\n\n\n\n  return (\n    \n    <div className='container'>\n      \n      <Header/>\n      <AddTask/>\n      {tasks.length > 0 ? (\n      <Tasks tasks={tasks}  \n      onDelete={deleteTask}\n      onToggle={toggleReminder}/> \n      ) : ( 'No Tasks to show' \n      )}\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}